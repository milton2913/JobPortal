<?php

namespace App\Http\Requests;

use App\Helpers\Skill;
use App\Models\Division;
use App\Models\EmployerContact;
use Illuminate\Foundation\Http\FormRequest;
use Illuminate\Support\Facades\Auth;
use File;
class EmployerRequest extends FormRequest
{
    /**
     * Determine if the user is authorized to make this request.
     *
     * @return bool
     */
    public function authorize()
    {
        return true;
    }

    /**
     * Get the validation rules that apply to the request.
     *
     * @return array
     */
    public function rules()
    {
        $id = $this->route('id');
        $rules = [
            'company_name' => 'required|max:191|unique:employers,company_name,'.$id,
            'company_name_bn' => 'required|max:350',
            'country_id' => 'required',
            'industry_type_id' => 'required',
            'contact_person_name' => 'nullable|string|min:0|max:250',
            'contact_person_designation' => 'required',
            'contact_person_email' => 'required|unique:employers,contact_person_email,'.$id,
            'contact_person_mobile' => 'max:20',
            'contact_person_email' => 'max:100',
            'contact_person_designation' => 'max:100',
        ];
        if ($this->input('country_id')==19){
            $rules['division_id'] = 'required';
            $rules['district_id'] = 'required';
            $rules['upazila_id'] = 'required';
        }else{
            $rules['state'] = 'required|max:100';
            $rules['city'] = 'required';
        }
        return $rules;
    }

    public function messages()
    {
       // Change the autogenerated message
        return [
            'division_id.required' => 'Select a Division',
            'district_id.required' => 'Select a District',
            'upazila_id.required' => 'Select a Upazila',
        ];
    }

    public function getData(){
        $data =  $this->only(['company_name','company_name_bn','country_id','address','address_bn','contact_phone','contact_email','industry_type_id','description','trade_license_no','rl_no','website_url','contact_person_name','contact_person_designation','contact_person_mobile','contact_person_email','state','city']);
        if ($this->input('country_id')==19){
            $data['division_id'] = $this->input(['division_id']);
            $data['district_id'] = $this->input(['district_id']);
            $data['upazila_id'] = $this->input(['upazila_id']);
        }
        if ($this->input(['employer_contact_id'])!=null && $this->input(['employer_contact_id'])>0){
            $contact = EmployerContact::find($this->input(['employer_contact_id']));
            $data['contact_person_name']=$contact->name;
            $data['contact_person_email']=$contact->email;
            $data['contact_person_designation']=$contact->designation;
            $data['contact_person_mobile']=$contact->mobile;
        }
        $data['user_id']=Auth::id();
        return $data;
    }
    public function getEmployerContact($employer){
        $data['name'] = $this->input('contact_person_name');
        $data['email'] = $this->input('contact_person_designation');
        $data['mobile'] = $this->input('contact_person_mobile');
        $data['designation'] = $this->input('contact_person_email');
        $data['employer_id']= $employer->id;
        return $data;
    }

}
